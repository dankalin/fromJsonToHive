[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers" ;*/*:dumpStructureTo C:/Users/dkalin/AppData/Local/Temp/sbt-structure.xml; session clear-all ; set ideaPort in Global := 61373, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_202)
[debug]       Load.loadUnit: plugins took 26.1714ms
[debug]       Load.loadUnit: defsScala took 0.010799ms
[debug] [Loading] Scanning directory C:\Users\dkalin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dkalin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1101 ms
[debug]           Load.resolveProject(global-plugins) took 1.8936ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\dkalin\.sbt\1.0\plugins, plugins: List(<none>))) took 4.003101ms
[debug] [Loading] Done in C:\Users\dkalin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 5.924399ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0066ms
[debug]     Load.loadUnit(file:/C:/Users/dkalin/.sbt/1.0/plugins/, ...) took 33.7743ms
[debug]   Load.apply: load took 36.3764ms
[debug]   Load.apply: resolveProjects took 0.1754ms
[debug]   Load.apply: finalTransforms took 5.2238ms
[debug]   Load.apply: config.delegates took 0.284899ms
[debug]   Load.apply: Def.make(settings)... took 42.741299ms
[debug]   Load.apply: structureIndex took 9.6962ms
[debug]   Load.apply: mkStreams took 0.0062ms
[info] loading global plugins from C:\Users\dkalin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 297.6047ms
[debug]           Load.loadUnit: plugins took 26.9786ms
[debug]           Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\jSonToHive\project
[debug]             Load.loadUnit: mkEval took 0.3303ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\jSonToHive\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9571 ms
[info] loading settings for project jsontohive-build from idea1.sbt ...
[debug]               Load.resolveProject(jsontohive-build) took 1.707ms
[debug]             Load.loadTransitive: finalizeProject(Project(id jsontohive-build, base: C:\jSonToHive\project, plugins: List(<none>))) took 3.1354ms
[debug] [Loading] Done in C:\jSonToHive\project, returning: (jsontohive-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 30.7737ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.592ms
[debug]         Load.loadUnit(file:/C:/jSonToHive/project/, ...) took 60.1146ms
[debug]       Load.apply: load took 61.3078ms
[debug]       Load.apply: resolveProjects took 0.075001ms
[debug]       Load.apply: finalTransforms took 5.939999ms
[debug]       Load.apply: config.delegates took 0.4837ms
[debug]       Load.apply: Def.make(settings)... took 45.641ms
[debug]       Load.apply: structureIndex took 11.3272ms
[debug]       Load.apply: mkStreams took 0.003601ms
[info] loading project definition from C:\jSonToHive\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 327.861899ms
[debug]     Load.loadUnit: defsScala took 0.001701ms
[debug] [Loading] Scanning directory C:\jSonToHive
[debug]       Load.loadUnit: mkEval took 0.2693ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\jSonToHive, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3582 ms
[info] loading settings for project jsontohive from build.sbt ...
[debug]         Load.resolveProject(jsontohive) took 42.281401ms
[debug]       Load.loadTransitive: finalizeProject(Project(id jsontohive, base: C:\jSonToHive, plugins: List(<none>))) took 45.840999ms
[debug] [Loading] Done in C:\jSonToHive, returning: (jsontohive)
[debug]     Load.loadUnit: loadedProjectsRaw took 1041.8004ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.392101ms
[debug]   Load.loadUnit(file:/C:/jSonToHive/, ...) took 1376.560301ms
[debug] Load.apply: load took 1377.8953ms
[debug] Load.apply: resolveProjects took 0.4001ms
[debug] Load.apply: finalTransforms took 16.7153ms
[debug] Load.apply: config.delegates took 0.2169ms
[debug] Load.apply: Def.make(settings)... took 63.0372ms
[debug] Load.apply: structureIndex took 14.3529ms
[debug] Load.apply: mkStreams took 0.0025ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to jSonToHive (in build file:/C:/jSonToHive/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to jSonToHive (in build file:/C:/jSonToHive/)
[debug] > Exec(*/*:dumpStructureTo C:/Users/dkalin/AppData/Local/Temp/sbt-structure.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[warn] sbt 0.13 shell syntax is deprecated; use slash syntax instead: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] Writing structure to C:\Users\dkalin\AppData\Local\Temp\sbt-structure.xml...
[info] Done.
[success] Total time: 34 s, completed 21.02.2022 22:04:52
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to jSonToHive (in build file:/C:/jSonToHive/)
[debug] > Exec(set ideaPort in Global := 61373, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to jSonToHive (in build file:/C:/jSonToHive/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
