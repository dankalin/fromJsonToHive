[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers" ;*/*:dumpStructureTo C:/Users/dkalin/AppData/Local/Temp/sbt-structure1.xml; session clear-all ; set ideaPort in Global := 61373, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_202)
[debug]       Load.loadUnit: plugins took 22.397401ms
[debug]       Load.loadUnit: defsScala took 0.0131ms
[debug] [Loading] Scanning directory C:\Users\dkalin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dkalin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2549 ms
[debug]           Load.resolveProject(global-plugins) took 1.0882ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\dkalin\.sbt\1.0\plugins, plugins: List(<none>))) took 2.884ms
[debug] [Loading] Done in C:\Users\dkalin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 4.0654ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0121ms
[debug]     Load.loadUnit(file:/C:/Users/dkalin/.sbt/1.0/plugins/, ...) took 27.502399ms
[debug]   Load.apply: load took 28.8961ms
[debug]   Load.apply: resolveProjects took 0.1577ms
[debug]   Load.apply: finalTransforms took 4.2795ms
[debug]   Load.apply: config.delegates took 0.2766ms
[debug]   Load.apply: Def.make(settings)... took 52.738801ms
[debug]   Load.apply: structureIndex took 16.0728ms
[debug]   Load.apply: mkStreams took 0.0031ms
[info] loading global plugins from C:\Users\dkalin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 346.7251ms
[debug]           Load.loadUnit: plugins took 63.3687ms
[debug]           Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\jSonToHive\project
[debug]             Load.loadUnit: mkEval took 0.262999ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\jSonToHive\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8595 ms
[info] loading settings for project jsontohive-build from idea1.sbt ...
[debug]               Load.resolveProject(jsontohive-build) took 3.544ms
[debug]             Load.loadTransitive: finalizeProject(Project(id jsontohive-build, base: C:\jSonToHive\project, plugins: List(<none>))) took 5.8911ms
[debug] [Loading] Done in C:\jSonToHive\project, returning: (jsontohive-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 28.0613ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.639399ms
[debug]         Load.loadUnit(file:/C:/jSonToHive/project/, ...) took 92.607999ms
[debug]       Load.apply: load took 93.781201ms
[debug]       Load.apply: resolveProjects took 0.1145ms
[debug]       Load.apply: finalTransforms took 4.850499ms
[debug]       Load.apply: config.delegates took 0.266899ms
[debug]       Load.apply: Def.make(settings)... took 57.487499ms
[debug]       Load.apply: structureIndex took 17.690399ms
[debug]       Load.apply: mkStreams took 0.0047ms
[info] loading project definition from C:\jSonToHive\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 313.8083ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\jSonToHive
[debug]       Load.loadUnit: mkEval took 0.236001ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\jSonToHive, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.103799 ms
[info] loading settings for project jsontohive from build.sbt ...
[debug]         Load.resolveProject(jsontohive) took 33.3185ms
[debug]       Load.loadTransitive: finalizeProject(Project(id jsontohive, base: C:\jSonToHive, plugins: List(<none>))) took 36.064799ms
[debug] [Loading] Done in C:\jSonToHive, returning: (jsontohive)
[debug]     Load.loadUnit: loadedProjectsRaw took 86.4584ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.9729ms
[debug]   Load.loadUnit(file:/C:/jSonToHive/, ...) took 402.7672ms
[debug] Load.apply: load took 403.8513ms
[debug] Load.apply: resolveProjects took 0.1032ms
[debug] Load.apply: finalTransforms took 14.959001ms
[debug] Load.apply: config.delegates took 0.4185ms
[debug] Load.apply: Def.make(settings)... took 72.3588ms
[debug] Load.apply: structureIndex took 12.743701ms
[debug] Load.apply: mkStreams took 0.0043ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to jSonToHive (in build file:/C:/jSonToHive/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to jSonToHive (in build file:/C:/jSonToHive/)
[debug] > Exec(*/*:dumpStructureTo C:/Users/dkalin/AppData/Local/Temp/sbt-structure1.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[warn] sbt 0.13 shell syntax is deprecated; use slash syntax instead: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] Writing structure to C:\Users\dkalin\AppData\Local\Temp\sbt-structure1.xml...
[info] Done.
[success] Total time: 4 s, completed 21.02.2022 22:01:54
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to jSonToHive (in build file:/C:/jSonToHive/)
[debug] > Exec(set ideaPort in Global := 61373, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to jSonToHive (in build file:/C:/jSonToHive/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
